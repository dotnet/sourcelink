jobs:
- job: Windows
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  pool: dotnet-external-temp
  timeoutInMinutes: 20

  steps:
    - checkout: self
      clean: true
    - script: eng/cibuild.cmd -configuration $(_configuration) -prepareMachine
      displayName: Build and Test

    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)\*.xml'
        mergeTestResults: true
        testRunTitle: 'Windows $(_configuration)'
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: 'Windows $(_configuration)'
      continueOnError: true
      condition: not(succeeded())

- job: Unix
  strategy:
    matrix:
      Ubuntu18_Debug:
        _configuration: Debug
        _container: ubuntu.18.04
      Ubuntu18_Release:
        _configuration: Release
        _container: ubuntu.18.04
      Ubuntu14:
        _configuration: Debug
        _container: ubuntu.14.04
      Fedora:
        _configuration: Debug
        _container: fedora.29
      RHEL:
        _configuration: Debug
        _container: rhel.7
      CentOS:
        _configuration: Debug
        _container: centos.6
      Alpine:
        _configuration: Debug
        _container: alpine.3.6
      Debian:
        _configuration: Debug
        _container: debian.8.2
      OpenSUSE:
        _configuration: Debug
        _container: opensuse.42.3

  pool: dnceng-linux-external-temp
  timeoutInMinutes: 20

  steps:
    - checkout: self
      clean: true
    - script: ./eng/cibuild.sh --configuration $(_configuration) --docker $(_container) --prepareMachine
      displayName: Build and Test
    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_configuration)/*.xml'
        mergeTestResults: true
        testRunTitle: $(_container) $(_configuration)'
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_configuration)'
        ArtifactName: '$(_container) $(_configuration)'
      continueOnError: true
      condition: not(succeeded())
