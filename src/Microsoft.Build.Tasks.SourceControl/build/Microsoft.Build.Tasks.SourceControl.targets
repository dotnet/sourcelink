<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <_SourceControlAssemblyFile Condition="'$(MSBuildRuntimeType)' != 'Core'">$(MSBuildThisFileDirectory)..\tools\net461\Microsoft.Build.Tasks.SourceControl.dll</_SourceControlAssemblyFile>
    <_SourceControlAssemblyFile Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)..\tools\netcoreapp2.0\Microsoft.Build.Tasks.SourceControl.dll</_SourceControlAssemblyFile>
  </PropertyGroup>
  
  <UsingTask TaskName="Microsoft.Build.Tasks.SourceControl.GetExternalFiles" AssemblyFile="$(_SourceControlAssemblyFile)"/>
  <UsingTask TaskName="Microsoft.Build.Tasks.SourceControl.GenerateSourceLinkFile" AssemblyFile="$(_SourceControlAssemblyFile)"/>

  <!--
    A single SourceControlBuildTasks is expected to be found, error is reported otherwise before the tasks are called.
    Since the assembly loading is lazy bad value in AssemblyFile doesn't cause failure until the tasks are called.
  -->
  <UsingTask TaskName="SourceControlBuildTasks.LocateRepository" AssemblyFile="@(SourceControlBuildTasks->'%(AssemblyFile)')"/>
  <UsingTask TaskName="SourceControlBuildTasks.GetSourceRoots" AssemblyFile="@(SourceControlBuildTasks->'%(AssemblyFile)')"/>
  <UsingTask TaskName="SourceControlBuildTasks.GetRepositoryUrl" AssemblyFile="@(SourceControlBuildTasks->'%(AssemblyFile)')"/>
  <UsingTask TaskName="SourceControlBuildTasks.GetSourceRevisionId" AssemblyFile="@(SourceControlBuildTasks->'%(AssemblyFile)')" />
  <UsingTask TaskName="SourceControlBuildTasks.GetUntrackedFiles" AssemblyFile="@(SourceControlBuildTasks->'%(AssemblyFile)')"/>

  <Target Name="_InitializeSourceControlInformationFromSCM"
          BeforeTargets="InitializeSourceControlInformation">
    
    <Error Text="A single source control package required, found multiple: @(SourceControlBuildTasks, ', ')"
           Condition="@(SourceControlBuildTasks->Count()) != 1"/>

    <!-- 
      Determines id of the repository the project belongs to. Tasks use this id to identify repository without 
      repeatedly traversing the directory structure.
      
      Reports and error if the given project doesn't belong to a repository under source control.
    -->
    <SourceControlBuildTasks.LocateRepository Directory="$(MSBuildProjectDirectory)" >
      <Output TaskParameter="Id" PropertyName="_SourceControlLocalRepositoryId" />
    </SourceControlBuildTasks.LocateRepository>

    <PropertyGroup>
      <RepositoryType Condition="'$(RepositoryType)' == ''">@(SourceControlBuildTasks)</RepositoryType>
    </PropertyGroup>

    <SourceControlBuildTasks.GetRepositoryUrl LocalRepositoryId="$(_SourceControlLocalRepositoryId)" Condition="'$(PrivateRepositoryUrl)' == ''">
      <Output TaskParameter="Url" PropertyName="PrivateRepositoryUrl" />
    </SourceControlBuildTasks.GetRepositoryUrl>

    <SourceControlBuildTasks.GetSourceRevisionId LocalRepositoryId="$(_SourceControlLocalRepositoryId)" Condition="'$(SourceRevisionId)' == ''">
      <Output TaskParameter="RevisionId" PropertyName="SourceRevisionId" />
    </SourceControlBuildTasks.GetSourceRevisionId>

    <SourceControlBuildTasks.GetSourceRoots LocalRepositoryId="$(_SourceControlLocalRepositoryId)">
      <Output TaskParameter="Roots" ItemName="SourceRoot" />
    </SourceControlBuildTasks.GetSourceRoots>
  </Target>

  <!--
    Embed files to the PDB that either do not belong to any of the SourceRoot directories
    or belong to the source repository, but are explicitly ignored (excluded) from source control.
  -->
  <Target Name="_SetEmbeddedFilesFromSCMUntrackedFiles"
          DependsOnTargets="_InitializeSourceControlInformationFromSCM"
          BeforeTargets="CoreCompile"
          Condition="'$(EmbedUntrackedSources)' == 'true' and '$(EmbedAllSources)' != 'true' and '$(DebugType)' != 'none'">

    <SourceControlBuildTasks.GetUntrackedFiles LocalRepositoryId="$(_SourceControlLocalRepositoryId)" ProjectDirectory="$(MSBuildProjectDirectory)" Files="@(Compile)">
      <Output TaskParameter="UntrackedFiles" ItemName="EmbeddedFiles" />
    </SourceControlBuildTasks.GetUntrackedFiles>
  </Target>

  <!--
    ===========
    Source Link
    ===========
  -->
  
  <PropertyGroup Condition="'$(EnableSourceLink)' == 'true' and '$(DebugType)' != 'none'">
    <SourceLink>$(IntermediateOutputPath)$(MSBuildProjectName).sourcelink.json</SourceLink>
  </PropertyGroup>

  <!-- 
    If defined populates SourceRoot items and other source control information.
  -->
  <Target Name="_InitializeSourceControlInformationOpt"
          DependsOnTargets="InitializeSourceControlInformation"
          Condition="'$(SourceControlInformationFeatureSupported)' == 'true'" />

  <!-- 
    If defined populates MappedPath metadata of SourceRoot items. 
  -->
  <Target Name="_InitializeSourceRootMappedPathsOpt"
          DependsOnTargets="InitializeSourceRootMappedPaths"
          Condition="'$(SourceRootMappedPathsFeatureSupported)' == 'true'"/>

  <!--
    Each source control provider package adds its SourceLinkUrl initialization target to SourceLinkUrlInitializerTargets.
    This target shall initialize SourceLinkUrl of all items that don't have it initialized yet and belong to the source control provider.
  -->
  <Target Name="_GenerateSourceLinkFile"
          DependsOnTargets="_InitializeSourceControlInformationOpt;_InitializeSourceRootMappedPathsOpt;$(SourceLinkUrlInitializerTargets)"
          BeforeTargets="CoreCompile"
          Outputs="$(SourceLink)"
          Condition="'$(SourceLink)' != ''">

    <Microsoft.Build.Tasks.SourceControl.GenerateSourceLinkFile SourceRoots="@(SourceRoot)" OutputFile="$(SourceLink)" />

    <ItemGroup>
      <FileWrites Include="$(SourceLink)" />
    </ItemGroup>
  </Target>
  
</Project>
