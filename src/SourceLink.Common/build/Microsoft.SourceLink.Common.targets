<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <_MicrosoftSourceLinkCommonAssemblyFile Condition="'$(MSBuildRuntimeType)' != 'Core'">$(MSBuildThisFileDirectory)..\tools\net461\Microsoft.SourceLink.Common.dll</_MicrosoftSourceLinkCommonAssemblyFile>
    <_MicrosoftSourceLinkCommonAssemblyFile Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)..\tools\netcoreapp2.0\Microsoft.SourceLink.Common.dll</_MicrosoftSourceLinkCommonAssemblyFile>
  </PropertyGroup>
  
  <UsingTask TaskName="Microsoft.SourceLink.Common.GenerateSourceLinkFile" AssemblyFile="$(_MicrosoftSourceLinkCommonAssemblyFile)"/>
  <UsingTask TaskName="Microsoft.SourceLink.Common.GetImplicitRepositoryHost" AssemblyFile="$(_MicrosoftSourceLinkCommonAssemblyFile)"/>
  
  <PropertyGroup Condition="'$(EnableSourceLink)' == 'true' and '$(DebugType)' != 'none'">
    <SourceLink>$(IntermediateOutputPath)$(MSBuildProjectName).sourcelink.json</SourceLink>
  </PropertyGroup>
  
  <!--
    Triggers InitializeSourceControlInformationFromSourceControlManager target defined by a source control package Microsoft.Build.Tasks.{Git|Tfvc|...}.
    
    Notes: No error is reported if InitializeSourceControlInformation is not defined.
  -->
  <Target Name="_InitializeSourceControlInformationFromSourceControlManager"
          DependsOnTargets="InitializeSourceControlInformationFromSourceControlManager"
          BeforeTargets="InitializeSourceControlInformation"
          Condition="'$(EnableSourceControlManagerQueries)' == 'true'"/>

  <!--
    Triggers SetEmbeddedFilesFromSourceControlManagerUntrackedFiles target defined by a source control package Microsoft.Build.Tasks.{Git|Tfvc|...}.
  -->
  <Target Name="_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles"
          DependsOnTargets="SetEmbeddedFilesFromSourceControlManagerUntrackedFiles"
          BeforeTargets="CoreCompile"
          Condition="'$(EmbedUntrackedSources)' == 'true' and '$(EmbedAllSources)' != 'true' and '$(DebugType)' != 'none' and '$(EnableSourceControlManagerQueries)' == 'true'" />

  <!-- 
    If defined populates MappedPath metadata of SourceRoot items. 
  -->
  <Target Name="_InitializeSourceRootMappedPathsOpt"
          DependsOnTargets="InitializeSourceRootMappedPaths"
          Condition="'$(SourceRootMappedPathsFeatureSupported)' == 'true'"/>

  <!-- 
    Initializes values available to all targets in SourceLinkUrlInitializerTargets.
  -->
  <Target Name="_BeforeSourceLinkUrlInitializerTargets"
          DependsOnTargets="InitializeSourceControlInformation;_InitializeSourceRootMappedPathsOpt"
          BeforeTargets="$(SourceLinkUrlInitializerTargets)">

    <!--
      If there is a single SourceLink provider use the Repository URL to infer the repository host.
      If the project references multiple SourceLink providers the user needs to specify hosts explicitly (ImplicitHost will be empty)
      as we do not know which providers should be used to produce SourceLink URL for the repository.
      
      Reports an error if there is no SourceLinkUrlInitializerTargets is empty (no SourceLink provider is referenced).
    -->
    <Microsoft.SourceLink.Common.GetImplicitRepositoryHost ProviderTargets="$(SourceLinkUrlInitializerTargets)" RepositoryUrl="$(PrivateRepositoryUrl)" >
      <Output TaskParameter="ImplicitHost" PropertyName="SourceLinkImplicitRepositoryHost"/>
    </Microsoft.SourceLink.Common.GetImplicitRepositoryHost>
  </Target>

  <!--
    Each source control provider package adds its SourceLinkUrl initialization target to SourceLinkUrlInitializerTargets.
    This target shall initialize SourceLinkUrl of all items that don't have it initialized yet and belong to the source control provider.
  -->
  <Target Name="GenerateSourceLinkFile"
          DependsOnTargets="$(SourceLinkUrlInitializerTargets)"
          BeforeTargets="CoreCompile"
          Outputs="$(SourceLink)"
          Condition="'$(SourceLink)' != '' and '$(SourceControlInformationFeatureSupported)' == 'true'">

    <Microsoft.SourceLink.Common.GenerateSourceLinkFile SourceRoots="@(SourceRoot)" OutputFile="$(SourceLink)" />

    <ItemGroup>
      <FileWrites Include="$(SourceLink)" />
    </ItemGroup>
  </Target>
  
</Project>
