<!-- Copied from arcade with small modifications. -->
<Project>

  <PropertyGroup>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IsPackable>true</IsPackable>
    <!-- Build Tasks should have this set per https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/Versioning.md#recommended-settings -->
    <AutoGenerateAssemblyVersion>true</AutoGenerateAssemblyVersion>
    <PackTasks Condition="'$(PackTasks)' == ''">true</PackTasks>
    <TargetsForTfmSpecificContentInPackage Condition="'$(PackTasks)' == 'true'">$(TargetsForTfmSpecificContentInPackage);_AddBuildOutputToPackageCore;_AddBuildOutputToPackageDesktop</TargetsForTfmSpecificContentInPackage>
    <DevelopmentDependency>true</DevelopmentDependency>
    <!-- Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. -->
    <NoWarn>$(NoWarn);NU5128</NoWarn>
  </PropertyGroup>

  <!--
    Default to including all *.props and *.targets files
    from the project directory into the NuGet package root
  -->
  <ItemGroup Condition="'$(EnableDefaultItems)' != 'false'">
    <None Condition="'$(EnableDefaultNoneItems)' != 'false'"
          Include="**/*.props;**/*.targets"
          Pack="true"
          PackagePath="%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(RepoRoot)License.txt" PackagePath="LICENSE.txt" Pack="true"/>
  </ItemGroup>

  <!-- Don't include assemblies that MSBuild ships with. -->
  <ItemGroup>
    <PackageReference Update="Microsoft.Build" Publish="false" />
    <PackageReference Update="Microsoft.Build.Framework" Publish="false" />
    <PackageReference Update="Microsoft.Build.Tasks.Core" Publish="false" />
    <PackageReference Update="Microsoft.Build.Utilities.Core" Publish="false" />
    <PackageReference Update="Microsoft.NET.StringTools" Publish="false" />
    <PackageReference Update="System.Collections.Immutable" Publish="false" />
  </ItemGroup>

  <!-- Don't include assemblies that are provided by the SDK, next to MSBuild. -->
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(SkipSDKInboxPublishExcludes)' != 'true'">
    <PackageReference Update="Newtonsoft.Json" Publish="false" />
    <PackageReference Update="NuGet.Commands" Publish="false" />
    <PackageReference Update="NuGet.Common" Publish="false" />
    <PackageReference Update="NuGet.Configuration" Publish="false" />
    <PackageReference Update="NuGet.Frameworks" Publish="false" />
    <PackageReference Update="NuGet.Packaging" Publish="false" />
    <PackageReference Update="NuGet.ProjectModel" Publish="false" />
    <PackageReference Update="NuGet.Versioning" Publish="false" />
  </ItemGroup>

  <!-- Don't include assemblies that are inbox in Desktop MSBuild -->
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <PackageReference Update="System.Buffers" Publish="false" />
    <PackageReference Update="System.Memory" Publish="false" />
    <PackageReference Update="System.Numerics.Vectors" Publish="false" />
    <PackageReference Update="System.Reflection.Metadata" Publish="false" />
    <PackageReference Update="System.Reflection.MetadataLoadContext" Publish="false" />
    <PackageReference Update="System.Runtime.CompilerServices.Unsafe" Publish="false" />
    <PackageReference Update="System.Security.Cryptography.Xml" Publish="false" />
    <PackageReference Update="System.Text.Encodings.Web" Publish="false" />
    <PackageReference Update="System.Text.Json" Publish="false" />
    <PackageReference Update="System.Threading.Tasks.Dataflow" Publish="false" />
    <PackageReference Update="System.Threading.Tasks.Extensions" Publish="false" />
    <PackageReference Update="System.ValueTuple" Publish="false" />
  </ItemGroup>

  <ItemGroup>
    <!--
      Update all PackageReference items to default Publish to true.
      This forces the publish output to contain the dlls.
     -->
    <PackageReference Update="@(PackageReference)">
      <Publish Condition="'%(PackageReference.Publish)' == ''">true</Publish>
      <PrivateAssets Condition="'%(PackageReference.Publish)' == 'false'">all</PrivateAssets>
      <ExcludeAssets Condition="'%(PackageReference.Publish)' == 'false'">runtime</ExcludeAssets>
    </PackageReference>

    <!--
      Update all Reference items to have Pack="false"
      This removes the frameworkDependency nodes from the generated nuspec
    -->
    <Reference Update="@(Reference)"
               Pack="false" />
  </ItemGroup>

  <!-- Desktop MSBuild compatibilty -->
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <PackageReference Update="System.Text.Json" Version="7.0.1" />
    <PackageReference Update="Microsoft.Extensions.Logging.Console" Version="7.0.0" />
    <PackageReference Update="Microsoft.Extensions.DependencyModel" Version="7.0.0" />
    <PackageReference Update="System.Collections.Immutable" Version="7.0.0" />
    <PackageReference Update="System.Reflection.Metadata" Version="7.0.0" />
  </ItemGroup>

  <!-- Publish .NET assets and include them in the package under tools/net directory. -->
  <Target Name="_AddBuildOutputToPackageCore" DependsOnTargets="Publish" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(PublishDir)**"
                              PackagePath="tools/net/%(RecursiveDir)%(FileName)%(Extension)"/>
    </ItemGroup>
  </Target>

  <!-- Include .NET Framework build outputs in the package under tools/netframework directory. -->
  <Target Name="_AddBuildOutputToPackageDesktop" Condition="'$(TargetFrameworkIdentifier)' != '.NETCoreApp'">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)**" PackagePath="tools/netframework/%(RecursiveDir)%(FileName)%(Extension)"/>
    </ItemGroup>
  </Target>

</Project>
